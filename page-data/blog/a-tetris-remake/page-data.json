{"componentChunkName":"component---src-templates-post-js","path":"/blog/a-tetris-remake","result":{"data":{"mdx":{"frontmatter":{"title":"A Tetris Remake","tags":["game development","java","personal project"],"date":"June 3rd 2015"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A Tetris Remake\",\n  \"date\": \"2015-06-03\",\n  \"blurb\": \"This was the second Java game I ever made. My objective for this game was to create it in as little time as possible (at most 5 days) with a unique implementation.\",\n  \"tags\": [\"game development\", \"java\", \"personal project\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Tetris is one of the most influential games ever created, and one of my personal favorites (I'm not very good at it). This was the second game I ever made. My objective for this game was to create it in as little time as possible (at most 5 days) with a unique implementation. This game took me 4 days non-stop to create, and was programmed in Java.\")), mdx(\"h2\", {\n    \"id\": \"tools-technologies-and-skills\"\n  }, \"Tools, Technologies, and Skills\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eclipse IDE for development\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Photoshop for graphics and sprites\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copious amounts of coffee\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Object oriented programming (use of MVC design pattern, I wasn't intentionally aware of this at the time)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fast iteration of solutions to a problem (trying to quickly come up with implementations for the logic of Tetris)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image editing and processing via Photoshop\")), mdx(\"h2\", {\n    \"id\": \"challenges-issues-and-their-resolutions\"\n  }, \"Challenges, Issues, and their Resolutions\"), mdx(\"p\", null, \"Determining an implementation for this game was the most difficult part due to the time constraint I had set on myself. So, I got out a piece of paper and just started writing down possible ways to implement the logic and graphics of the game. Ultimately, I came to the conclusion of the 2 following implementations for the logic:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using an nxn grid of booleans to keep track of where each tetromino was located. Draw the shapes wherever the value was True\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A collision based approach where each tetromino would have a position variable, and that variable would be used to calculate where to draw the shapes\")), mdx(\"p\", null, \"Eventually I chose the boolean grid approach due to the fact that keeping track of True/False values made work simpler than keeping track of each tetromino's position. The pieces were also True/False values; as the blocks would move down the grid, the game would update its grid based on the values of each piece. The rotation logic also took a little bit of effort to implement but was relatively simple when compared to implementing the grid.\"), mdx(\"h2\", {\n    \"id\": \"what-did-i-learn\"\n  }, \"What did I Learn\"), mdx(\"p\", null, \"Sometimes iterating through a plethora of solutions very quickly is a good way to determine the best solution. If you think something might not work try to implement it and figure out improvements upon it, or try to attempt a different solution. When working with teams you have to complete projects with very strict deadlines. During this process, if a solution does not work you will have to quickly determine another solution. This project gave me a sense of this urgency.\"), mdx(\"p\", null, \"On a more direct note, I definitely learned a lot about arrays and other general container objects, pertaining to performance. Iterating through different implementations allowed me to begin forming a general workflow for projects or any other type of work, which I will undoubtedly use in the future. Roughly speaking the process goes something like this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write down exactly what your objective for the project is\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write down the general steps and sections you will have to go through to reach that objective\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Come up with mockups, algorithms, architecture, etc before starting any work on the app. Essentially think through solutions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create the product while solving and iterating through solutions if necessary. Also keep track of everything you do (daily logs, backups, design mockups, etc)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once project is complete, reflect upon it, and use this opportunity to create more improved products in the future\")), mdx(\"h2\", {\n    \"id\": \"links\"\n  }, \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ShabazBadshah/TetrisRemake\"\n  }), \"Source Code\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.youtube.com/watch?feature=player_embedded&v=EOo-WPmIbdY\"\n  }), \"Video Demo\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Tetris is one of the most influential games ever created, and one of my personal favorites (I'm not very good at it). This was the secondâ€¦","tableOfContents":{"items":[{"url":"#tools-technologies-and-skills","title":"Tools, Technologies, and Skills"},{"url":"#challenges-issues-and-their-resolutions","title":"Challenges, Issues, and their Resolutions"},{"url":"#what-did-i-learn","title":"What did I Learn"},{"url":"#links","title":"Links"}]},"timeToRead":2,"fields":{"slug":"a-tetris-remake"}}},"pageContext":{"slug":"a-tetris-remake"}},"staticQueryHashes":[]}