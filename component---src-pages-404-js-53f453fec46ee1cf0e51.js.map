{"version":3,"sources":["webpack:///./src/components/link-button.js","webpack:///./src/pages/404.js"],"names":["LinkButton","text","linkToMoveTo","enableDarkMode","StyledLinkButton","state","to","defaultProps","styled","Link","globalThemeColour","props","darkModeThemeColour","deviceMaxWidth","mobileL","NotFoundPage","Consumer","globalState","title","Styled404Section","Styled404Wrapper","StyledH1","StyledParagraph","darkMode","isDarkModeEnabled","div","p","h1","keyframes","fadeIn","laptop"],"mappings":"2FAAA,yEAUMA,EAAa,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACxC,OACE,kBAACC,EAAD,CAAkBC,MAAO,CAAEF,eAAgBA,GAAkBG,GAAIJ,GAC9DD,IAYPD,EAAWO,aAAe,CACxBJ,gBAAgB,EAChBD,aAAc,KAGDF,MAEf,IAAMI,EAAmBI,YAAOC,QAAV,gFAAGD,CAAH,+aAMAE,KAEN,SAACC,GAAD,OACZA,EAAMN,MAAMF,eACR,4CACA,kDAEQO,KAQD,SAACC,GAAD,OAAYA,EAAMN,MAAMF,eAAiB,oBAA7B,OAA0DO,IAA1D,YACd,SAACC,GAAD,OAAYA,EAAMN,MAAMF,eAAiB,UAAYO,OAC1C,SAACC,GAAD,OAAYA,EAAMN,MAAMF,eAAiBS,IAAsB,YAK5EC,IAAeC,U,kCC5D1B,oHAoCeC,UAtBM,WACnB,OACE,kBAAC,IAAmBC,SAApB,MACG,SAACC,GAAD,OACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,QACX,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,+BACA,kBAACC,EAAD,2IAIA,kBAAC,IAAD,CAAYrB,KAAK,aAAaC,aAAa,IAAIC,eAAgBc,EAAYM,SAASC,2BAWlG,IAAMJ,EAAmBZ,IAAOiB,IAAV,+EAAGjB,CAAH,mGAKXK,IAAeC,SAKpBQ,EAAkBd,IAAOkB,EAAV,8EAAGlB,CAAH,2EAOfa,EAAWb,IAAOmB,GAAV,uEAAGnB,CAAH,wIAMaK,IAAeC,SAKpCK,EAAmBX,IAAOiB,IAAV,+EAAGjB,CAAH,kQAGPoB,YAHO,QAGKC,UAOAhB,IAAeiB,OAIfjB,IAAeC","file":"component---src-pages-404-js-53f453fec46ee1cf0e51.js","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { globalThemeColour, darkModeThemeColour } from '../assets/global-style-constants.js';\nimport { deviceMaxWidth } from '../media-query-sizes.js';\n\nconst LinkButton = ({ text, linkToMoveTo, enableDarkMode }) => {\n  return (\n    <StyledLinkButton state={{ enableDarkMode: enableDarkMode }} to={linkToMoveTo}>\n      {text}\n    </StyledLinkButton>\n  );\n};\n\nLinkButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  linkToMoveTo: PropTypes.string,\n  // enableDarkMode default prop set in global-state-context-provider\n  enableDarkMode: PropTypes.bool,\n};\n\nLinkButton.defaultProps = {\n  enableDarkMode: false,\n  linkToMoveTo: '/',\n};\n\nexport default LinkButton;\n\nconst StyledLinkButton = styled(Link)`\n  display: block;\n  align-self: center;\n  width: 50%;\n  text-decoration: none;\n  font-size: 1.2em;\n  background-color: ${globalThemeColour};\n  color: #f9f8f7;\n  box-shadow: ${(props) =>\n    props.state.enableDarkMode\n      ? '0.5rem 0.5rem 1.5rem 0 rgba(0, 0, 0, 0.2)'\n      : '0.5rem 0.5rem 1.5rem 0 rgba(85, 85, 85, 0.12)'};\n  padding: 0.6rem 1rem;\n  border: 2px ${globalThemeColour} solid;\n  border-radius: 4px;\n  margin: 1rem 2rem 0 0;\n  letter-spacing: 0.04rem;\n  text-align: center;\n  transition: all 100ms ease-in;\n\n  &:hover {\n    border:  ${(props) => (props.state.enableDarkMode ? '2px #f9f8f7 solid' : `2px ${globalThemeColour} solid`)};\n    color: ${(props) => (props.state.enableDarkMode ? '#f9f8f7' : globalThemeColour)};\n    background-color: ${(props) => (props.state.enableDarkMode ? darkModeThemeColour : '#f9f8f7')};\n    transform: translateY(-0.2rem);\n    transition: all 100ms ease-out;\n  }\n\n  @media ${deviceMaxWidth.mobileL} {\n    width: 100%;\n    margin: 1rem 0;\n`;\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\n\nimport Layout from '../components/layout.js';\nimport SEO from '../components/seo.js';\n\nimport { globalStateContext } from '../contextProviders/global-state-context-provider.js';\nimport { deviceMaxWidth } from '../media-query-sizes.js';\nimport LinkButton from '../components/link-button.js';\n\nconst NotFoundPage = () => {\n  return (\n    <globalStateContext.Consumer>\n      {(globalState) => (\n        <Layout>\n          <SEO title=\"404\" />\n          <Styled404Section>\n            <Styled404Wrapper>\n              <StyledH1>üòê 404 Page Not Found!</StyledH1>\n              <StyledParagraph>\n                \"Um.......I swear this page was working on my computer. I'll add this bug to the backlog. Let's forget\n                like this ever happened.\"\n              </StyledParagraph>\n              <LinkButton text=\"üè†Go Home?\" linkToMoveTo=\"/\" enableDarkMode={globalState.darkMode.isDarkModeEnabled} />\n            </Styled404Wrapper>\n          </Styled404Section>\n        </Layout>\n      )}\n    </globalStateContext.Consumer>\n  );\n};\n\nexport default NotFoundPage;\n\nconst Styled404Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media ${deviceMaxWidth.mobileL} {\n    margin: 0 1rem 1rem 1rem;\n  }\n`;\n\nconst StyledParagraph = styled.p`\n  font-size: 1.5em;\n  line-height: 1.6;\n  word-spacing: 0.1em;\n  font-style: italic;\n`;\n\nconst StyledH1 = styled.h1`\n  margin: 4rem 0;\n  font-family: 'Times New Roman', Times, serif;\n  font-size: 8em;\n  font-weight: bold;\n\n  @media only screen and ${deviceMaxWidth.mobileL} {\n    font-size: 3.5em;\n  }\n`;\n\nconst Styled404Section = styled.div`\n  display: flex;\n  max-width: 1024px;\n  animation: ${keyframes`${fadeIn}`} 400ms ease-in;\n\n  position: fixed;\n  top: 50%;\n  bottom: 50%;\n  padding: 20px;\n\n  @media only screen and ${deviceMaxWidth.laptop} {\n    max-width: 800px;\n  }\n\n  @media only screen and ${deviceMaxWidth.mobileL} {\n    position: initial;\n    padding: 0;\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n`;\n"],"sourceRoot":""}